syntax = "proto3";
package icademo.txdemo;

option go_package = "github.com/ThanhNhann/icademo/x/txdemo/types";

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";
import "icademo/txdemo/validator.proto";

message HostZone {
    // Chain ID of the host zone
    string chain_id = 1;
    // Bech32 prefix of host zone's address
    string bech32prefix = 17;
    // ConnectionID to the host zone
    string connection_id = 2;
    // Transfer Channel ID to the host zone
    string transfer_channel_id = 3;
    // ibc denom of the host zone's native token
    string ibc_denom = 4;
    // native denom on host zone
    string host_denom = 5;
    // The unbonding period in days (e.g. 21)
    uint64 unbonding_period = 6;
    // List of validators that are delegated to
    repeated Validator validators = 7;
    // Address that custodies native tokens during a liquid stake
    string deposit_address = 8
        [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
    // ICA Address on the host zone responsible for staking and unstaking
    string delegation_ica_address = 9
        [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
    // ICA Address on the host zone responsible for collecting rewards
    string withdrawal_ica_address = 10
        [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
    // ICA Address that receives unstaked tokens after they've finished unbonding
    string redemption_ica_address = 11
        [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
    bool halted = 12;
    // The maximum number of messages per ICA tx
    uint64 max_messages_per_ica_tx = 13;
}